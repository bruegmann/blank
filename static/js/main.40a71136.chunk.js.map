{"version":3,"sources":["docs/shared.ts","docs/MenuItem.tsx","components/Button.tsx","docs/ThemeSwitch.tsx","components/Modal.tsx","docs/ExampleModal.tsx","components/FormControl.tsx","docs/ExampleFormControl.tsx","docs/pages/DemosPage.tsx","docs/pages/PostsPage.tsx","docs/Logo.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["phrases","getPhrase","keyword","countryCode","undefined","_phrases","navigator","language","toLowerCase","indexOf","MenuItem","children","href","to","className","clsx","buttonAttrShadow","primary","shadow","silent","getClassName","props","Button","Object","assign","AnchorButton","ThemeSwitch","prefersDarkScheme","window","matchMedia","themeFromStorage","localStorage","getItem","useState","includes","matches","theme","setTheme","initTheme","_theme","document","body","classList","remove","add","matchMediaCallback","removeItem","useEffect","addEventListener","removeEventListener","onClick","setItem","Modal","toggle","title","classNames","show","setShow","fadeOut","setFadeOut","setTimeout","role","tabIndex","aria-label","modalBody","ExampleModal","formControlAttrShadow","FormControl","TextareaFormControl","ExampleFormControl","text","setText","type","value","onChange","target","DemosPage","rel","PostsPage","content","author","date","likes","posts","setPosts","Date","toDateString","newPost","setNewPost","onSubmit","event","preventDefault","newPosts","push","placeholder","reverse","map","post","key","length","style","width","height","backgroundColor","color","Logo","xmlns","fillRule","strokeLinejoin","strokeMiterlimit","clipRule","viewBox","transform","fill","d","id","clipPath","x1","x2","y1","y2","gradientTransform","gradientUnits","offset","stopColor","cx","cy","r","stopOpacity","App","customFont","setCustomFont","basename","process","fontSize","path","exact","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.40a71136.chunk.js","sourcesContent":["interface IPhrases {\r\n    [key: string]: string[]\r\n}\r\n\r\nexport const phrases: IPhrases = {\r\n    \"HELLO_WORLD\": [\"Hello World!\", \"Hallo Welt!\"]\r\n}\r\n\r\nexport function getPhrase(keyword: string, countryCode: string | undefined = undefined, _phrases: IPhrases | undefined = undefined) {\r\n    countryCode = countryCode || (navigator.language).toLowerCase().indexOf(\"de\") > -1 ? \"de-DE\" : \"en-US\"\r\n    _phrases = _phrases || phrases\r\n\r\n    if (_phrases[keyword]) {\r\n        if (countryCode.indexOf(\"de-\") > -1) {\r\n            return _phrases[keyword][1]\r\n        }\r\n        else {\r\n            return _phrases[keyword][0]\r\n        }\r\n    }\r\n    else {\r\n        return keyword\r\n    }\r\n}","import { ReactNode } from \"react\"\r\nimport clsx from \"clsx\"\r\nimport { NavLink } from \"react-router-dom\"\r\n\r\nexport interface MenuItemProps {\r\n    children: ReactNode\r\n    href?: string\r\n    to?: string\r\n}\r\n\r\nexport function MenuItem({ children, href, to }: MenuItemProps) {\r\n    if (to) {\r\n        return (\r\n            <NavLink to={to} className={clsx(\"py-1 px-2\")}>{children}</NavLink>\r\n        )\r\n    }\r\n    return (\r\n        <a href={href} className={clsx(\"py-1 px-2\")}>{children}</a>\r\n    )\r\n}","import clsx from \"clsx\";\r\nimport { AnchorHTMLAttributes, ButtonHTMLAttributes } from \"react\";\r\n\r\nexport interface ButtonBaseProps {\r\n    className?: string\r\n    primary?: boolean\r\n    shadow?: boolean | \"sm\"\r\n    silent?: boolean\r\n}\r\n\r\nconst buttonAttrShadow = { primary: undefined, shadow: undefined, silent: undefined }\r\n\r\nfunction getClassName(props: ButtonBaseProps) {\r\n    const { primary, shadow, silent } = props\r\n\r\n    return clsx(\"btn px-3 py-2 rounded\", {\r\n        primary,\r\n        \"neumorphism-shadow-sm\": shadow === \"sm\" || shadow === undefined,\r\n        \"neumorphism-shadow\": shadow === true,\r\n        silent\r\n    }, props.className)\r\n}\r\n\r\nexport interface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement>, ButtonBaseProps { }\r\nexport function Button(props: ButtonProps) {\r\n    return (\r\n        <button {...Object.assign({}, props, buttonAttrShadow) as unknown as ButtonHTMLAttributes<HTMLButtonElement>}\r\n            className={getClassName(props)}\r\n        >\r\n            {props.children}\r\n        </button>\r\n    )\r\n}\r\n\r\n\r\nexport interface AnchorButtonProps extends AnchorHTMLAttributes<HTMLAnchorElement>, ButtonBaseProps { }\r\nexport function AnchorButton(props: AnchorButtonProps) {\r\n    return (\r\n        <a {...Object.assign({}, props, buttonAttrShadow) as unknown as AnchorHTMLAttributes<HTMLAnchorElement>}\r\n            className={getClassName(props)}\r\n        >\r\n            {props.children}\r\n        </a>\r\n    )\r\n}","import { useEffect, useState } from \"react\"\r\nimport { MoonStars, Sun } from \"react-bootstrap-icons\"\r\nimport { Button } from \"../components/Button\"\r\nimport { getPhrase } from \"./shared\"\r\n\r\nexport function ThemeSwitch() {\r\n    const prefersDarkScheme = window.matchMedia(\"(prefers-color-scheme: dark)\")\r\n    const themeFromStorage = localStorage.getItem(\"theme\")\r\n\r\n    const [theme, setTheme] = useState(themeFromStorage && [\"dark\", \"light\"].includes(themeFromStorage) ? themeFromStorage : prefersDarkScheme.matches ? \"dark\" : \"light\") // \"dark\" | \"light\" | null\r\n\r\n    const initTheme = (_theme = theme) => {\r\n        setTheme(_theme)\r\n        document.body.classList.remove(\"light\")\r\n        document.body.classList.remove(\"dark\")\r\n\r\n        document.body.classList.add(_theme)\r\n    }\r\n\r\n    const toggleTheme = () => {\r\n        const _theme = theme === \"dark\" ? \"light\" : \"dark\"\r\n        localStorage.setItem(\"theme\", _theme)\r\n        initTheme(_theme)\r\n    }\r\n\r\n    const matchMediaCallback = () => {\r\n        initTheme(prefersDarkScheme.matches ? \"dark\" : \"light\")\r\n        localStorage.removeItem(\"theme\")\r\n    }\r\n\r\n    useEffect(() => {\r\n        initTheme()\r\n        prefersDarkScheme.addEventListener(\"change\", matchMediaCallback)\r\n\r\n        return () => {\r\n            prefersDarkScheme.removeEventListener(\"change\", matchMediaCallback)\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <Button onClick={toggleTheme} className=\"d-inline-flex align-items-center neumorphism-shadow-sm\">\r\n            {theme === \"light\" ?\r\n                <>\r\n                    <MoonStars className=\"me-1\" /> {getPhrase(\"Switch to dark theme\")}\r\n                </>\r\n                :\r\n                <>\r\n                    <Sun className=\"me-1\" /> {getPhrase(\"Switch to light theme\")}\r\n                </>\r\n            }\r\n        </Button>\r\n    )\r\n}","import { X } from \"react-bootstrap-icons\"\r\nimport clsx from \"clsx\"\r\nimport { ReactNode, useEffect, useState } from \"react\"\r\n\r\nexport interface ModalProps {\r\n    children: ReactNode\r\n    show: boolean\r\n    toggle: () => void\r\n    title?: string\r\n    classNames?: {\r\n        modalBody?: string\r\n    }\r\n}\r\n\r\nexport default function Modal(props: ModalProps) {\r\n    const { children, toggle, title, classNames } = props\r\n\r\n    const [show, setShow] = useState<boolean>()\r\n    const [fadeOut, setFadeOut] = useState<boolean>(false)\r\n\r\n    useEffect(() => {\r\n        // If change `show` from false to true, run animation first\r\n        if (show === true && props.show === false) {\r\n            setFadeOut(true)\r\n            setTimeout(() => {\r\n                setFadeOut(false)\r\n                setShow(props.show)\r\n            }, 200)\r\n        }\r\n        else {\r\n            setShow(props.show)\r\n        }\r\n    }, [props.show])\r\n\r\n    return (\r\n        <div className={clsx(\"modal\", { show, fadeOut })} role=\"dialog\" tabIndex={-1}>\r\n            <div className=\"modal-backdrop\" onClick={toggle} />\r\n\r\n            <div className=\"modal-content\" role=\"document\">\r\n                <div className=\"modal-header d-flex justify-content-between mt-3 mb-2\">\r\n                    <h2 className=\"m-0\">{title}</h2>\r\n\r\n                    <button className=\"btn-close\" onClick={toggle} aria-label=\"Close\"><X /></button>\r\n                </div>\r\n                <div className={clsx(\"modal-body body-bg-stronger p-3 rounded\", classNames?.modalBody)}>\r\n                    {children}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { useState } from \"react\";\r\nimport { Button } from \"../components/Button\";\r\nimport Modal from \"../components/Modal\";\r\nimport { ThemeSwitch } from \"./ThemeSwitch\";\r\n\r\nexport interface ExampleModalProps {\r\n\r\n}\r\n\r\nexport default function ExampleModal({ }: ExampleModalProps) {\r\n    const [show, setShow] = useState<boolean>(false)\r\n    const toggle = () => setShow(!show)\r\n\r\n    return (\r\n        <>\r\n            <Button onClick={toggle} className=\"mb-3 neumorphism-shadow-sm\">Open modal</Button>\r\n            <Modal show={show} toggle={toggle} title=\"Modal title\" classNames={{ modalBody: \"p-4\" }}>\r\n                <h1>Modal content</h1>\r\n\r\n                <p>\r\n                    Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.\r\n                </p>\r\n\r\n                <div className=\"d-flex justify-content-between\">\r\n                    <ThemeSwitch />\r\n\r\n                    <div>\r\n                        <Button primary className=\"me-3\" onClick={toggle}>Okay</Button>\r\n                        <Button silent shadow={false} onClick={toggle}>Cancel</Button>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </>\r\n    )\r\n}","import clsx from \"clsx\";\r\nimport { InputHTMLAttributes, TextareaHTMLAttributes } from \"react\";\r\n\r\nexport interface FormControlBaseProps {\r\n    className?: string\r\n    shadow?: boolean | \"sm\"\r\n    silent?: boolean\r\n}\r\n\r\n\r\nconst formControlAttrShadow = {}\r\n\r\nfunction getClassName(props: FormControlBaseProps) {\r\n    const { shadow, silent } = props\r\n\r\n    return clsx(\"form-control p-2 rounded\", {\r\n        \"neumorphism-shadow-sm\": shadow === \"sm\" || shadow === undefined,\r\n        \"neumorphism-shadow\": shadow === true,\r\n        silent\r\n    }, props.className)\r\n}\r\n\r\nexport interface FormControlProps extends InputHTMLAttributes<HTMLInputElement>, FormControlBaseProps { }\r\nexport function FormControl(props: FormControlProps) {\r\n    return (\r\n        <input\r\n            {...Object.assign({}, props, formControlAttrShadow) as unknown as InputHTMLAttributes<HTMLInputElement>}\r\n            className={getClassName(props)}\r\n        />\r\n    )\r\n}\r\n\r\nexport interface TextareaFormControlProps extends TextareaHTMLAttributes<HTMLTextAreaElement>, FormControlBaseProps { }\r\nexport default function TextareaFormControl(props: TextareaFormControlProps) {\r\n    return (\r\n        <textarea\r\n            {...Object.assign({}, props, formControlAttrShadow) as unknown as TextareaHTMLAttributes<HTMLTextAreaElement>}\r\n            className={getClassName(props)}\r\n        />\r\n    )\r\n}","import { useState } from \"react\"\r\nimport { Button } from \"../components/Button\"\r\nimport TextareaFormControl, { FormControl } from \"../components/FormControl\"\r\n\r\nexport interface ExampleFormControlProps {\r\n\r\n}\r\n\r\nexport default function ExampleFormControl({ }: ExampleFormControlProps) {\r\n    const [text, setText] = useState<string>(\"\")\r\n\r\n    return (\r\n        <>\r\n            <div className=\"mb-3\">\r\n                <FormControl type=\"text\" value={text} onChange={({ target }) => setText(target.value)} />\r\n                <Button className=\"ms-2 me-3\">Now click me</Button>\r\n                {`You typed: ${text}`}\r\n            </div>\r\n\r\n            <label className=\"d-block mb-5\">\r\n                <div className=\"mb-1 position-relative\"><strong>Write something</strong></div>\r\n                <TextareaFormControl value={text} onChange={({ target }) => setText(target.value)} className=\"d-block w-100\" />\r\n            </label>\r\n\r\n            <label className=\"d-block mb-5 form-control p-0 neumorphism-shadow-sm rounded\">\r\n                <div className=\"mb-1 mx-2 mt-2\"><strong>Write something</strong></div>\r\n                <textarea className=\"form-control-input p-2 border-0 d-block w-100\" />\r\n            </label>\r\n        </>\r\n    )\r\n}","import { ThemeSwitch } from \"../ThemeSwitch\"\r\nimport { AnchorButton, Button } from \"../../components/Button\"\r\nimport ExampleModal from \"../ExampleModal\"\r\nimport ExampleFormControl from \"../ExampleFormControl\"\r\n\r\nexport interface DemosPageProps {\r\n\r\n}\r\n\r\nexport default function DemosPage({ }: DemosPageProps) {\r\n    return (\r\n        <div className=\"container mx-3\">\r\n            <h1>Blank</h1>\r\n\r\n            <a href=\"#\">Normal link</a>\r\n\r\n            <div className=\"link-area mb-3\">\r\n                <a href=\"#\">Link in link area</a> Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.\r\n                </div>\r\n\r\n            <div className=\"mb-3\">\r\n                <Button className=\"me-3\">Click me!</Button>\r\n                <AnchorButton primary className=\"me-3\" href=\"https://google.com\" target=\"_blank\" rel=\"noopener noreferrer\">Open link</AnchorButton>\r\n                <Button silent className=\"me-3\">Silent button</Button>\r\n                <Button silent shadow={false} className=\"me-3\">Silent button without shadow</Button>\r\n                <Button shadow={false}>Button without shadow</Button>\r\n            </div>\r\n\r\n            <ExampleFormControl />\r\n\r\n            <div className=\"p-3 my-3 body-bg-stronger neumorphism-shadow rounded-3\">\r\n                <h2>My card content</h2>\r\n\r\n                <p>\r\n                    Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.\r\n                    </p>\r\n\r\n                <ThemeSwitch />\r\n            </div>\r\n\r\n            <ExampleModal />\r\n        </div>\r\n    )\r\n}","import clsx from \"clsx\";\r\nimport { FormEvent, useState } from \"react\";\r\nimport { Heart, Image } from \"react-bootstrap-icons\"\r\nimport { Button } from \"../../components/Button\";\r\n\r\nexport interface PostsPageProps {\r\n\r\n}\r\n\r\ninterface Post {\r\n    content: string\r\n    author: string,\r\n    date: string,\r\n    likes: number\r\n}\r\n\r\nexport default function PostsPage({ }: PostsPageProps) {\r\n    const [posts, setPosts] = useState<Post[]>([\r\n        {\r\n            content: \"Hello, I just wanted to write something\",\r\n            author: \"LGK\",\r\n            date: \"20.06.2021 / 11:26\",\r\n            likes: 2\r\n        },\r\n        {\r\n            content: \"Nother one\",\r\n            author: \"HGT\",\r\n            date: \"20.06.2021 / 12:26\",\r\n            likes: 0\r\n        }\r\n    ])\r\n\r\n    const [newPost, setNewPost] = useState<Post>({\r\n        content: \"\",\r\n        author: \"USR\",\r\n        date: new Date().toDateString(),\r\n        likes: 0\r\n    })\r\n\r\n    const submit = (event: FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault()\r\n        let newPosts = [...posts]\r\n        newPosts.push(newPost)\r\n        setPosts(newPosts)\r\n        setNewPost({\r\n            content: \"\",\r\n            author: \"USR\",\r\n            date: new Date().toDateString(),\r\n            likes: 0\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"container mx-3\">\r\n            <form className=\"my-3 form-control body-bg-stronger neumorphism-shadow rounded-3\" onSubmit={submit}>\r\n                <label className=\"d-block\">\r\n                    <div className=\"mb-1 mx-3 mt-3\"><strong>New post</strong></div>\r\n                    <textarea className=\"form-control-input p-3 border-0 d-block w-100\" placeholder=\"What's going on?\"\r\n                        value={newPost.content} onChange={({ target }) => setNewPost({ ...newPost, content: target.value })} />\r\n                </label>\r\n\r\n                <div className=\"p-3 d-flex justify-content-between\">\r\n                    <Button title=\"Upload image\" silent type=\"button\"><Image /></Button>\r\n\r\n                    <Button primary type=\"submit\">Submit post as {newPost.author}</Button>\r\n                </div>\r\n            </form>\r\n\r\n            {[...posts].reverse().map((post, key) =>\r\n                <div key={key} className={clsx(\"px-3 py-4\", { \"border-bottom\": key !== posts.length - 1 })}>\r\n                    <header className=\"d-flex justify-content-between\">\r\n                        <div>\r\n                            <span className=\"rounded-circle d-inline-flex align-items-center justify-content-center me-2\" style={{ width: \"32px\", height: \"32px\", backgroundColor: \"#076d7f\", color: \"white\" }}>{post.author}</span>\r\n                            <a href=\"#\">{post.date}</a>\r\n                        </div>\r\n\r\n                        <div className=\"d-flex\">\r\n                            <Button silent shadow={false} className=\"d-inline-flex align-items-center me-2\" style={{ color: \"red\" }}><Heart className=\"me-1\" /> {post.likes}</Button>\r\n                            <Button shadow={false}>Reply</Button>\r\n                        </div>\r\n                    </header>\r\n                    <div>{post.content}</div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}","export const Logo = () => (\r\n    <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        fillRule=\"evenodd\"\r\n        strokeLinejoin=\"round\"\r\n        strokeMiterlimit=\"2\"\r\n        clipRule=\"evenodd\"\r\n        viewBox=\"0 0 404 404\"\r\n        width=\"1em\"\r\n        height=\"1em\"\r\n    >\r\n        <g transform=\"translate(-2733.37 -151.568)\">\r\n            <g transform=\"translate(2238.48 151.568)\">\r\n                <path fill=\"none\" d=\"M494.892 0H898.172V403.28H494.892z\"></path>\r\n                <g transform=\"translate(494.892)\">\r\n                    <path\r\n                        fill=\"url(#_Linear1)\"\r\n                        d=\"M403.23 88.693C403.23 39.742 363.488 0 314.537 0H88.773C39.822 0 .08 39.742.08 88.693v225.764c0 48.951 39.742 88.693 88.693 88.693h225.764c48.951 0 88.693-39.742 88.693-88.693V88.693z\"\r\n                    ></path>\r\n                    <clipPath id=\"_clip2\">\r\n                        <path d=\"M403.23 88.693C403.23 39.742 363.488 0 314.537 0H88.773C39.822 0 .08 39.742.08 88.693v225.764c0 48.951 39.742 88.693 88.693 88.693h225.764c48.951 0 88.693-39.742 88.693-88.693V88.693z\"></path>\r\n                    </clipPath>\r\n                    <g clipPath=\"url(#_clip2)\">\r\n                        <path fill=\"url(#_Radial3)\" d=\"M0 0.13H403.15V403.28H0z\"></path>\r\n                    </g>\r\n                </g>\r\n                <path\r\n                    fill=\"#fff\"\r\n                    d=\"M3048.02 313.454c0-38.96-31.63-70.59-70.59-70.59h-79.41c-38.96 0-70.59 31.63-70.59 70.59v79.414c0 38.96 31.63 70.59 70.59 70.59h79.41c38.96 0 70.59-31.63 70.59-70.59v-79.414zm-16 0v79.414c0 30.129-24.46 54.59-54.59 54.59h-79.41c-30.13 0-54.59-24.461-54.59-54.59v-79.414c0-30.129 24.46-54.59 54.59-54.59h79.41c30.13 0 54.59 24.461 54.59 54.59z\"\r\n                    transform=\"matrix(.95197 0 0 .95197 -2100.11 -134.56)\"\r\n                ></path>\r\n            </g>\r\n        </g>\r\n        <defs>\r\n            <linearGradient\r\n                id=\"_Linear1\"\r\n                x1=\"0\"\r\n                x2=\"1\"\r\n                y1=\"0\"\r\n                y2=\"0\"\r\n                gradientTransform=\"translate(.08 201.575) scale(403.15)\"\r\n                gradientUnits=\"userSpaceOnUse\"\r\n            >\r\n                <stop offset=\"0\" stopColor=\"#A6B8E7\"></stop>\r\n                <stop offset=\"1\" stopColor=\"#DCA6E7\"></stop>\r\n            </linearGradient>\r\n            <radialGradient\r\n                id=\"_Radial3\"\r\n                cx=\"0\"\r\n                cy=\"0\"\r\n                r=\"1\"\r\n                gradientTransform=\"matrix(201.57 0 0 -201.57 201.57 203.725)\"\r\n                gradientUnits=\"userSpaceOnUse\"\r\n            >\r\n                <stop offset=\"0\" stopColor=\"#1D1D1B\" stopOpacity=\"0.2\"></stop>\r\n                <stop offset=\"1\" stopColor=\"#C2C2C1\" stopOpacity=\"0.2\"></stop>\r\n            </radialGradient>\r\n        </defs>\r\n    </svg>\r\n)","import \"./styles/docs.scss\"\nimport \"./styles/bootstrap.scss\"\n\nimport { Github } from \"react-bootstrap-icons\"\nimport { getPhrase } from \"./docs/shared\"\nimport { MenuItem } from \"./docs/MenuItem\"\nimport { Button } from \"./components/Button\"\nimport { CSSProperties, useState } from \"react\"\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\nimport DemosPage from \"./docs/pages/DemosPage\"\nimport PostsPage from \"./docs/pages/PostsPage\"\nimport { Logo } from \"./docs/Logo\"\nimport { ThemeSwitch } from \"./docs/ThemeSwitch\"\n\nfunction App() {\n    const [customFont, setCustomFont] = useState<boolean>(true)\n    const toggleCustomFont = () => setCustomFont(!customFont)\n\n    return (\n        <Router basename={process.env.PUBLIC_URL}>\n            <div className=\"App\" style={{\n                \"--font-family-base\": `${customFont ? '\"Inter\", ' : \"\"}-apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif`\n            } as CSSProperties}>\n                <header className=\"container mx-3 d-flex align-items-center justify-content-between py-4\">\n                    <a href=\"/\" className=\"d-inline-flex align-items-center\" style={{ fontSize: \"48px\" }}>\n                        <Logo /> <h5 className=\"ms-2 mb-0\">Blank</h5>\n                    </a>\n\n                    <nav className=\"d-flex align-items-center\">\n                        <MenuItem to=\"/\">{getPhrase(\"Home\")}</MenuItem>\n                        <MenuItem to=\"/posts\">{getPhrase(\"Posts demo page\")}</MenuItem>\n                        <Button onClick={toggleCustomFont} className=\"mx-3\">Toggle font</Button>\n                        <ThemeSwitch />\n                    </nav>\n                </header>\n\n                <Switch>\n                    <Route path=\"/posts\">\n                        <PostsPage />\n                    </Route>\n                    <Route exact path=\"/\">\n                        <DemosPage />\n                    </Route>\n                </Switch>\n\n                <footer className=\"text-center\">\n                    <a href=\"https://github.com/bruegmann/blank\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"d-inline-flex align-items-center\">\n                        <Github className=\"me-1\" /> Code on GitHub\n                    </a>\n                </footer>\n            </div>\n        </Router>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won\"t work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let\"s check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n                        \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === \"installed\") {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                \"New content is available and will be used when all \" +\n                                \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It\"s the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log(\"Content is cached for offline use.\")\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error(\"Error during service worker registration:\", error)\n        })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can\"t reload the page.\n    fetch(swUrl, {\n        headers: { \"Service-Worker\": \"script\" }\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get(\"content-type\")\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf(\"javascript\") === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\"\n            )\n        })\n}\n\nexport function unregister() {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}