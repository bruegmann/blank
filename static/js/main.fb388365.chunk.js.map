{"version":3,"sources":["docs/shared.ts","components/MenuItem.tsx","components/Button.tsx","docs/ThemeSwitch.tsx","components/Modal.tsx","docs/ExampleModal.tsx","components/FormControl.tsx","docs/ExampleFormControl.tsx","docs/CssVariables.tsx","docs/pages/DemosPage.tsx","docs/ThemifyLogo.tsx","docs/pages/PostsPage.tsx","docs/Logo.tsx","docs/Component.tsx","docs/pages/ComponentsPage.tsx","recipes.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["phrases","getPhrase","keyword","countryCode","undefined","_phrases","navigator","language","toLowerCase","indexOf","MenuItem","tag","rest","Tag","href","className","clsx","Button","primary","shadow","silent","noHover","spacing","ThemeSwitch","prefersDarkScheme","window","matchMedia","themeFromStorage","localStorage","getItem","useState","includes","matches","theme","setTheme","initTheme","_theme","document","documentElement","classList","remove","add","matchMediaCallback","removeItem","useEffect","addEventListener","removeEventListener","onClick","setItem","Modal","props","children","toggle","title","classNames","show","setShow","fadeOut","setFadeOut","setTimeout","role","tabIndex","aria-label","modalBody","ExampleModal","FormControl","ExampleFormControl","text","setText","type","value","onChange","target","CssVariables","cssVariables","setCssVariables","initCssVariables","list","Array","from","styleSheets","filter","sheet","startsWith","location","origin","reduce","acc","cssRules","def","rule","selectorText","style","name","mutationObserver","MutationObserver","observe","attributes","disconnect","map","cssVar","getComputedStyle","getPropertyValue","width","height","backgroundColor","DemosPage","rel","ThemifyLogo","xmlns","fillRule","strokeLinejoin","strokeMiterlimit","clipRule","viewBox","transform","fill","d","id","clipPath","fillOpacity","cx","cy","r","gradientTransform","gradientUnits","offset","stopColor","stopOpacity","PostsPage","content","author","date","likes","posts","setPosts","Date","toDateString","newPost","setNewPost","onSubmit","event","preventDefault","newPosts","push","placeholder","reverse","post","key","length","color","Logo","x1","x2","y1","y2","Component","comp","displayName","Object","keys","prop","fontWeight","required","description","tsType","raw","defaultValue","ComponentsPage","docs","values","index","App","customFont","basename","process","to","fontSize","NavLink","exact","alert","path","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.fb388365.chunk.js","sourcesContent":["interface IPhrases {\r\n    [key: string]: string[]\r\n}\r\n\r\nexport const phrases: IPhrases = {\r\n    \"HELLO_WORLD\": [\"Hello World!\", \"Hallo Welt!\"]\r\n}\r\n\r\nexport function getPhrase(keyword: string, countryCode: string | undefined = undefined, _phrases: IPhrases | undefined = undefined) {\r\n    countryCode = countryCode || (navigator.language).toLowerCase().indexOf(\"de\") > -1 ? \"de-DE\" : \"en-US\"\r\n    _phrases = _phrases || phrases\r\n\r\n    if (_phrases[keyword]) {\r\n        if (countryCode.indexOf(\"de-\") > -1) {\r\n            return _phrases[keyword][1]\r\n        }\r\n        else {\r\n            return _phrases[keyword][0]\r\n        }\r\n    }\r\n    else {\r\n        return keyword\r\n    }\r\n}\r\n\r\nexport interface DocumentedComponentTsType {\r\n    name: string\r\n    elements?: DocumentedComponentTsType[]\r\n    raw?: string\r\n}\r\n\r\nexport interface DocumentedComponentProps {\r\n    description: string\r\n    required: boolean\r\n    tsType: DocumentedComponentTsType\r\n    defaultValue?: {\r\n        computed: boolean\r\n        value: string\r\n    }\r\n}\r\n\r\nexport interface DocumentedComponent {\r\n    displayName: string\r\n    description: string\r\n    props: { [key: string]: DocumentedComponentProps }\r\n    exampleCode?: string\r\n}","import clsx from \"clsx\";\r\nimport { AnchorHTMLAttributes, ElementType } from \"react\";\r\n\r\nexport interface MenuItemProps extends AnchorHTMLAttributes<HTMLAnchorElement> {\r\n    [key: string]: any\r\n    tag?: ElementType\r\n}\r\n\r\nexport function MenuItem({ tag, ...rest }: MenuItemProps) {\r\n    let Tag = tag || (rest.href ? \"a\" : \"button\")\r\n    return (\r\n        <Tag {...rest} className={clsx(\"menu-item py-2 px-3 rounded d-flex d-md-inline-flex\", rest.className)} />\r\n    )\r\n}","import clsx from \"clsx\";\r\nimport { AnchorHTMLAttributes, ElementType } from \"react\";\r\n\r\nexport interface ButtonProps extends AnchorHTMLAttributes<HTMLAnchorElement> {\r\n    [key: string]: any\r\n    /** Disables hover effect, e.g. when button should marked as active. */\r\n    noHover?: boolean\r\n    primary?: boolean\r\n\r\n    shadow?: boolean | \"sm\"\r\n    silent?: boolean\r\n    spacing?: string\r\n    tag?: ElementType\r\n}\r\n\r\nexport function Button({ tag, primary, shadow, silent, noHover, spacing = \"px-3 py-2\", ...rest }: ButtonProps) {\r\n    let Tag = tag || (rest.href ? \"a\" : \"button\")\r\n    return (\r\n        <Tag {...rest} className={clsx(`btn ${spacing} rounded`, {\r\n            primary,\r\n            \"neumorphism-shadow-sm\": shadow === \"sm\" || shadow === undefined,\r\n            \"neumorphism-shadow\": shadow === true,\r\n            silent,\r\n            \"no-hover\": noHover\r\n        }, rest.className)} />\r\n    )\r\n}","import { useEffect, useState } from \"react\"\r\nimport { MoonStars, Sun } from \"react-bootstrap-icons\"\r\nimport { Button } from \"../components/Button\"\r\nimport { getPhrase } from \"./shared\"\r\n\r\nexport function ThemeSwitch() {\r\n    const prefersDarkScheme = window.matchMedia(\"(prefers-color-scheme: dark)\")\r\n    const themeFromStorage = localStorage.getItem(\"theme\")\r\n\r\n    const [theme, setTheme] = useState(themeFromStorage && [\"dark\", \"light\"].includes(themeFromStorage) ? themeFromStorage : prefersDarkScheme.matches ? \"dark\" : \"light\") // \"dark\" | \"light\" | null\r\n\r\n    const initTheme = (_theme = theme) => {\r\n        setTheme(_theme)\r\n        document.documentElement.classList.remove(\"light\")\r\n        document.documentElement.classList.remove(\"dark\")\r\n\r\n        document.documentElement.classList.add(_theme)\r\n    }\r\n\r\n    const toggleTheme = () => {\r\n        const _theme = theme === \"dark\" ? \"light\" : \"dark\"\r\n        localStorage.setItem(\"theme\", _theme)\r\n        initTheme(_theme)\r\n    }\r\n\r\n    const matchMediaCallback = () => {\r\n        initTheme(prefersDarkScheme.matches ? \"dark\" : \"light\")\r\n        localStorage.removeItem(\"theme\")\r\n    }\r\n\r\n    useEffect(() => {\r\n        initTheme()\r\n        prefersDarkScheme.addEventListener(\"change\", matchMediaCallback)\r\n\r\n        return () => {\r\n            prefersDarkScheme.removeEventListener(\"change\", matchMediaCallback)\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <Button onClick={toggleTheme} className=\"d-inline-flex align-items-center neumorphism-shadow-sm\">\r\n            {theme === \"light\" ?\r\n                <>\r\n                    <MoonStars className=\"me-1\" /> {getPhrase(\"Switch to dark theme\")}\r\n                </>\r\n                :\r\n                <>\r\n                    <Sun className=\"me-1\" /> {getPhrase(\"Switch to light theme\")}\r\n                </>\r\n            }\r\n        </Button>\r\n    )\r\n}","import { X } from \"react-bootstrap-icons\"\r\nimport clsx from \"clsx\"\r\nimport { ReactNode, useEffect, useState } from \"react\"\r\n\r\nexport interface ModalProps {\r\n    children: ReactNode\r\n\r\n    /** Set className of inner elements */\r\n    classNames?: {\r\n        modalBody?: string\r\n    }\r\n    show: boolean\r\n    title?: string\r\n    toggle: () => void\r\n}\r\n\r\nexport default function Modal(props: ModalProps) {\r\n    const { children, toggle, title, classNames } = props\r\n\r\n    const [show, setShow] = useState<boolean>()\r\n    const [fadeOut, setFadeOut] = useState<boolean>(false)\r\n\r\n    useEffect(() => {\r\n        // If change `show` from false to true, run animation first\r\n        if (show === true && props.show === false) {\r\n            setFadeOut(true)\r\n            setTimeout(() => {\r\n                setFadeOut(false)\r\n                setShow(props.show)\r\n            }, 200)\r\n        }\r\n        else {\r\n            setShow(props.show)\r\n        }\r\n    }, [props.show])\r\n\r\n    return (\r\n        <div className={clsx(\"modal\", { show, fadeOut })} role=\"dialog\" tabIndex={-1}>\r\n            <div className=\"modal-backdrop\" onClick={toggle} />\r\n\r\n            <div className=\"modal-content\" role=\"document\">\r\n                <div className=\"modal-header d-flex justify-content-between mt-3 mb-2\">\r\n                    <h2 className=\"m-0\">{title}</h2>\r\n\r\n                    <button className=\"btn-close\" onClick={toggle} aria-label=\"Close\"><X /></button>\r\n                </div>\r\n                <div className={clsx(\"modal-body body-bg-stronger p-3 rounded\", classNames?.modalBody)}>\r\n                    {children}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { useState } from \"react\";\r\nimport { Button } from \"../components/Button\";\r\nimport Modal from \"../components/Modal\";\r\nimport { ThemeSwitch } from \"./ThemeSwitch\";\r\n\r\nexport interface ExampleModalProps {\r\n\r\n}\r\n\r\nexport default function ExampleModal({ }: ExampleModalProps) {\r\n    const [show, setShow] = useState<boolean>(false)\r\n    const toggle = () => setShow(!show)\r\n\r\n    return (\r\n        <>\r\n            <Button onClick={toggle} className=\"mb-3 neumorphism-shadow-sm\">Open modal</Button>\r\n            <Modal show={show} toggle={toggle} title=\"Modal title\" classNames={{ modalBody: \"p-4\" }}>\r\n                <h1>Modal content</h1>\r\n\r\n                <p>\r\n                    Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.\r\n                </p>\r\n\r\n                <div className=\"d-flex justify-content-between\">\r\n                    <ThemeSwitch />\r\n\r\n                    <div>\r\n                        <Button primary className=\"me-3\" onClick={toggle}>Okay</Button>\r\n                        <Button silent shadow={false} onClick={toggle}>Cancel</Button>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </>\r\n    )\r\n}","import clsx from \"clsx\";\r\nimport { ElementType, InputHTMLAttributes } from \"react\";\r\n\r\nexport interface FormControlProps extends InputHTMLAttributes<HTMLInputElement> {\r\n    [key: string]: any\r\n    shadow?: boolean | \"sm\"\r\n    silent?: boolean\r\n    tag?: ElementType\r\n}\r\n\r\nexport function FormControl({ tag, shadow, silent, ...rest }: FormControlProps) {\r\n    let Tag = tag || \"input\"\r\n    return (\r\n        <Tag {...rest} className={clsx(\"form-control p-2 rounded\", {\r\n            \"neumorphism-shadow-sm\": shadow === \"sm\" || shadow === undefined,\r\n            \"neumorphism-shadow\": shadow === true,\r\n            silent\r\n        }, rest.className)} />\r\n    )\r\n}","import { useState } from \"react\"\r\nimport { Button } from \"../components/Button\"\r\nimport { FormControl } from \"../components/FormControl\"\r\n\r\nexport interface ExampleFormControlProps {\r\n\r\n}\r\n\r\nexport default function ExampleFormControl({ }: ExampleFormControlProps) {\r\n    const [text, setText] = useState<string>(\"\")\r\n\r\n    return (\r\n        <>\r\n            <div className=\"mb-3\">\r\n                <FormControl type=\"text\" value={text} onChange={({ target }) => setText(target.value)} />\r\n                <Button className=\"ms-2 me-3\">Now click me</Button>\r\n                {`You typed: ${text}`}\r\n            </div>\r\n\r\n            <label className=\"d-block mb-5\">\r\n                <div className=\"mb-1 position-relative\"><strong>Write something</strong></div>\r\n                <FormControl tag=\"textarea\" value={text} onChange={({ target }) => setText(target.value)} className=\"d-block w-100\" />\r\n            </label>\r\n\r\n            <label className=\"d-block mb-5 form-control p-0 neumorphism-shadow-sm rounded\">\r\n                <div className=\"mb-1 mx-2 mt-2\"><strong>Write something</strong></div>\r\n                <textarea className=\"form-control-input p-2 border-0 d-block w-100\" />\r\n            </label>\r\n        </>\r\n    )\r\n}","import { useEffect, useState } from \"react\"\r\n\r\nexport interface CssVariablesProps {\r\n\r\n}\r\n\r\nexport default function CssVariables({ }: CssVariablesProps) {\r\n    const prefersDarkScheme = window.matchMedia(\"(prefers-color-scheme: dark)\")\r\n    const [cssVariables, setCssVariables] = useState<string[]>([])\r\n\r\n    const initCssVariables = () => {\r\n        const list = Array.from(document.styleSheets)\r\n            .filter(\r\n                sheet =>\r\n                    sheet.href === null || sheet.href.startsWith(window.location.origin)\r\n            )\r\n            .reduce(\r\n                (acc: any, sheet: any) =>\r\n                (acc = [\r\n                    ...acc,\r\n                    ...Array.from<any>(sheet.cssRules).reduce(\r\n                        (def: any, rule: any) =>\r\n                        (def =\r\n                            rule.selectorText === \":root\"\r\n                                ? [\r\n                                    ...def,\r\n                                    ...Array.from(rule.style).filter((name: any) =>\r\n                                        name.startsWith(\"--\")\r\n                                    )\r\n                                ]\r\n                                : def),\r\n                        []\r\n                    )\r\n                ]),\r\n                []\r\n            )\r\n        setCssVariables([...list])\r\n    }\r\n\r\n    useEffect(() => {\r\n        initCssVariables()\r\n        prefersDarkScheme.addEventListener(\"change\", initCssVariables)\r\n        const mutationObserver = new MutationObserver(initCssVariables)\r\n\r\n        // Listens if className on :root changes (.light or .dark)\r\n        mutationObserver.observe(document.documentElement, { attributes: true })\r\n\r\n        return () => {\r\n            prefersDarkScheme.removeEventListener(\"change\", initCssVariables)\r\n            mutationObserver.disconnect()\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <h2 className=\"mt-3\">CSS variables</h2>\r\n\r\n            <p>\r\n                All <code>*-tone</code> color variables only include the HSL values (e.g. <code>0deg, 0%, 100%</code>). This way you can easily handle\r\n                the alpha value yourself like this: <code>hsla(var(--body-color-tone), .5)</code>\r\n            </p>\r\n\r\n            <div><code>:root {`{`}</code></div>\r\n            {cssVariables.map((cssVar: string) =>\r\n                <div key={cssVar} className=\"ms-3\">\r\n                    <code><strong>{cssVar}</strong>: {getComputedStyle(document.documentElement).getPropertyValue(cssVar)}</code>\r\n                    <div\r\n                        className=\"d-inline-block border ms-1 rounded\"\r\n                        style={{ width: \".8em\", height: \".8em\", backgroundColor: cssVar.includes(\"-tone\") ? `hsl(var(${cssVar}))` : `var(${cssVar})` }}\r\n                    />\r\n                </div>\r\n            )}\r\n            <div><code>{`}`}</code></div>\r\n        </>\r\n    )\r\n}","import { ThemeSwitch } from \"../ThemeSwitch\"\r\nimport { Button } from \"../../components/Button\"\r\nimport ExampleModal from \"../ExampleModal\"\r\nimport ExampleFormControl from \"../ExampleFormControl\"\r\nimport { useEffect, useState } from \"react\"\r\nimport CssVariables from \"../CssVariables\"\r\n\r\nexport interface DemosPageProps {\r\n\r\n}\r\n\r\nexport default function DemosPage({ }: DemosPageProps) {\r\n    return (\r\n        <div className=\"container mx-3\">\r\n            <h1>Blank</h1>\r\n\r\n            <a href=\"#\">Normal link</a>\r\n\r\n            <div className=\"link-area mb-3\">\r\n                <a href=\"#\">Link in link area</a> Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.\r\n            </div>\r\n\r\n            <div className=\"mb-3\">\r\n                <Button className=\"me-3\">Click me!</Button>\r\n                <Button primary className=\"me-3\" href=\"https://google.com\" target=\"_blank\" rel=\"noopener noreferrer\">Open link</Button>\r\n                <Button silent className=\"me-3\">Silent button</Button>\r\n                <Button silent shadow={false} className=\"me-3\">Silent button without shadow</Button>\r\n                <Button shadow={false} className=\"me-3\">Button without shadow</Button>\r\n                <Button noHover>Button with no hover for active state</Button>\r\n            </div>\r\n\r\n            <ExampleFormControl />\r\n\r\n            <div className=\"p-3 my-3 body-bg-stronger neumorphism-shadow rounded-3\">\r\n                <h2>My card content</h2>\r\n\r\n                <p>\r\n                    Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.\r\n                </p>\r\n\r\n                <ThemeSwitch />\r\n            </div>\r\n\r\n            <ExampleModal />\r\n\r\n            <CssVariables />\r\n        </div>\r\n    )\r\n}","export function ThemifyLogo({ className }: { className?: string }) {\r\n    return (\r\n        <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            fillRule=\"evenodd\"\r\n            strokeLinejoin=\"round\"\r\n            strokeMiterlimit=\"2\"\r\n            clipRule=\"evenodd\"\r\n            viewBox=\"0 0 404 404\"\r\n            width=\"1em\"\r\n            height=\"1em\"\r\n            className={className}\r\n        >\r\n            <g transform=\"translate(-4867.44 -693.889)\">\r\n                <g transform=\"matrix(.97588 0 0 .97635 4322.69 703.248)\">\r\n                    <path\r\n                        fill=\"none\"\r\n                        d=\"M558.205 -9.585H971.268V403.28000000000003H558.205z\"\r\n                    ></path>\r\n                    <clipPath id=\"_clip1\">\r\n                        <path d=\"M558.205 -9.585H971.268V403.28000000000003H558.205z\"></path>\r\n                    </clipPath>\r\n                    <g clipPath=\"url(#_clip1)\">\r\n                        <g transform=\"matrix(1.02472 0 0 1.02423 558.205 -9.585)\">\r\n                            <path\r\n                                fill=\"#2ECC71\"\r\n                                d=\"M403.15 88.693C403.15 39.742 363.408 0 314.457 0H88.693C39.742 0 0 39.742 0 88.693v225.764c0 48.951 39.742 88.693 88.693 88.693h225.764c48.951 0 88.693-39.742 88.693-88.693V88.693z\"\r\n                            ></path>\r\n                            <clipPath id=\"_clip2\">\r\n                                <path d=\"M403.15 88.693C403.15 39.742 363.408 0 314.457 0H88.693C39.742 0 0 39.742 0 88.693v225.764c0 48.951 39.742 88.693 88.693 88.693h225.764c48.951 0 88.693-39.742 88.693-88.693V88.693z\"></path>\r\n                            </clipPath>\r\n                            <g clipPath=\"url(#_clip2)\">\r\n                                <path\r\n                                    fill=\"url(#_Radial3)\"\r\n                                    d=\"M-1 -1H1V1H-1z\"\r\n                                    transform=\"matrix(-201.575 0 0 201.575 201.575 201.575)\"\r\n                                ></path>\r\n                            </g>\r\n                        </g>\r\n                        <path\r\n                            fill=\"#fff\"\r\n                            fillOpacity=\"0.8\"\r\n                            fillRule=\"nonzero\"\r\n                            d=\"M0-5.578l139.987-43.533-102.341 62.34 63.92 31.977 31.697-15.865 32.998-90.752-200.778 18.25-20.294 10.162L0-5.578zm-81.303-36.251l39.629-19.83c1.147-.558 2.355-.899 3.532-.992l218.129-19.861c5.454-.464 10.256 3.533 10.752 8.955a10.374 10.374 0 01-.558 4.276l-39.66 109.064c-.96 2.665-2.943 4.647-5.36 5.701l-39.164 19.582a9.873 9.873 0 01-8.892-.031L57.011 44.989 18.746 73.711a10.535 10.535 0 01-2.541 1.549c-5.019 2.138-10.845-.217-12.983-5.236l-28.319-66.09-56.206-28.102a9.87 9.87 0 01-4.43-13.262c.991-1.982 2.571-3.47 4.43-4.399\"\r\n                            transform=\"matrix(1.02472 0 0 1.02423 711.481 200.201)\"\r\n                        ></path>\r\n                    </g>\r\n                </g>\r\n            </g>\r\n            <defs>\r\n                <radialGradient\r\n                    id=\"_Radial3\"\r\n                    cx=\"0\"\r\n                    cy=\"0\"\r\n                    r=\"1\"\r\n                    gradientTransform=\"matrix(-1 0 0 1 0 0)\"\r\n                    gradientUnits=\"userSpaceOnUse\"\r\n                >\r\n                    <stop offset=\"0\" stopColor=\"#1D1D1B\" stopOpacity=\"0.2\"></stop>\r\n                    <stop offset=\"1\" stopColor=\"#C2C2C1\" stopOpacity=\"0.2\"></stop>\r\n                </radialGradient>\r\n            </defs>\r\n        </svg>\r\n    )\r\n}","import clsx from \"clsx\";\r\nimport { FormEvent, useState } from \"react\";\r\nimport { Heart, Image } from \"react-bootstrap-icons\"\r\nimport { Button } from \"../../components/Button\";\r\nimport { ThemifyLogo } from \"../ThemifyLogo\";\r\n\r\nexport interface PostsPageProps {\r\n\r\n}\r\n\r\ninterface Post {\r\n    content: string\r\n    author: string,\r\n    date: string,\r\n    likes: number\r\n}\r\n\r\nexport default function PostsPage({ }: PostsPageProps) {\r\n    const [posts, setPosts] = useState<Post[]>([\r\n        {\r\n            content: \"Hello, I just wanted to write something\",\r\n            author: \"LGK\",\r\n            date: \"20.06.2021 / 11:26\",\r\n            likes: 2\r\n        },\r\n        {\r\n            content: \"Nother one\",\r\n            author: \"HGT\",\r\n            date: \"20.06.2021 / 12:26\",\r\n            likes: 0\r\n        }\r\n    ])\r\n\r\n    const [newPost, setNewPost] = useState<Post>({\r\n        content: \"\",\r\n        author: \"USR\",\r\n        date: new Date().toDateString(),\r\n        likes: 0\r\n    })\r\n\r\n    const submit = (event: FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault()\r\n        let newPosts = [...posts]\r\n        newPosts.push(newPost)\r\n        setPosts(newPosts)\r\n        setNewPost({\r\n            content: \"\",\r\n            author: \"USR\",\r\n            date: new Date().toDateString(),\r\n            likes: 0\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <header className=\"container mx-3\">\r\n                <h2 className=\"d-flex align-items-center\"><ThemifyLogo className=\"me-1\" /> Afflatus</h2>\r\n            </header>\r\n\r\n            <div className=\"container mx-3\">\r\n                <form className=\"my-3 form-control body-bg-stronger neumorphism-shadow rounded-3\" onSubmit={submit}>\r\n                    <label className=\"d-block\">\r\n                        <div className=\"mb-1 mx-3 mt-3\"><strong>New post</strong></div>\r\n                        <textarea className=\"form-control-input p-3 border-0 d-block w-100\" placeholder=\"What's going on?\"\r\n                            value={newPost.content} onChange={({ target }) => setNewPost({ ...newPost, content: target.value })} />\r\n                    </label>\r\n\r\n                    <div className=\"p-3 d-flex justify-content-between\">\r\n                        <Button title=\"Upload image\" silent type=\"button\"><Image /></Button>\r\n\r\n                        <Button primary type=\"submit\">Submit post as {newPost.author}</Button>\r\n                    </div>\r\n                </form>\r\n\r\n                {[...posts].reverse().map((post, key) =>\r\n                    <div key={key} className={clsx(\"px-3 py-4\", { \"border-bottom\": key !== posts.length - 1 })}>\r\n                        <header className=\"d-flex justify-content-between\">\r\n                            <div>\r\n                                <span className=\"rounded-circle d-inline-flex align-items-center justify-content-center me-2\" style={{ width: \"32px\", height: \"32px\", backgroundColor: \"#076d7f\", color: \"white\" }}>{post.author}</span>\r\n                                <a href=\"#\">{post.date}</a>\r\n                            </div>\r\n\r\n                            <div className=\"d-flex\">\r\n                                <Button silent shadow={false} className=\"d-inline-flex align-items-center me-2\"><Heart className=\"me-1\" /> {post.likes}</Button>\r\n                                <Button shadow={false}>Reply</Button>\r\n                            </div>\r\n                        </header>\r\n                        <div>{post.content}</div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </>\r\n    )\r\n}","export const Logo = () => (\r\n    <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        fillRule=\"evenodd\"\r\n        strokeLinejoin=\"round\"\r\n        strokeMiterlimit=\"2\"\r\n        clipRule=\"evenodd\"\r\n        viewBox=\"0 0 404 404\"\r\n        width=\"1em\"\r\n        height=\"1em\"\r\n    >\r\n        <g transform=\"translate(-2733.37 -151.568)\">\r\n            <g transform=\"translate(2238.48 151.568)\">\r\n                <path fill=\"none\" d=\"M494.892 0H898.172V403.28H494.892z\"></path>\r\n                <g transform=\"translate(494.892)\">\r\n                    <path\r\n                        fill=\"url(#_Linear1)\"\r\n                        d=\"M403.23 88.693C403.23 39.742 363.488 0 314.537 0H88.773C39.822 0 .08 39.742.08 88.693v225.764c0 48.951 39.742 88.693 88.693 88.693h225.764c48.951 0 88.693-39.742 88.693-88.693V88.693z\"\r\n                    ></path>\r\n                    <clipPath id=\"_clip2\">\r\n                        <path d=\"M403.23 88.693C403.23 39.742 363.488 0 314.537 0H88.773C39.822 0 .08 39.742.08 88.693v225.764c0 48.951 39.742 88.693 88.693 88.693h225.764c48.951 0 88.693-39.742 88.693-88.693V88.693z\"></path>\r\n                    </clipPath>\r\n                    <g clipPath=\"url(#_clip2)\">\r\n                        <path fill=\"url(#_Radial3)\" d=\"M0 0.13H403.15V403.28H0z\"></path>\r\n                    </g>\r\n                </g>\r\n                <path\r\n                    fill=\"#fff\"\r\n                    d=\"M3048.02 313.454c0-38.96-31.63-70.59-70.59-70.59h-79.41c-38.96 0-70.59 31.63-70.59 70.59v79.414c0 38.96 31.63 70.59 70.59 70.59h79.41c38.96 0 70.59-31.63 70.59-70.59v-79.414zm-16 0v79.414c0 30.129-24.46 54.59-54.59 54.59h-79.41c-30.13 0-54.59-24.461-54.59-54.59v-79.414c0-30.129 24.46-54.59 54.59-54.59h79.41c30.13 0 54.59 24.461 54.59 54.59z\"\r\n                    transform=\"matrix(.95197 0 0 .95197 -2100.11 -134.56)\"\r\n                ></path>\r\n            </g>\r\n        </g>\r\n        <defs>\r\n            <linearGradient\r\n                id=\"_Linear1\"\r\n                x1=\"0\"\r\n                x2=\"1\"\r\n                y1=\"0\"\r\n                y2=\"0\"\r\n                gradientTransform=\"translate(.08 201.575) scale(403.15)\"\r\n                gradientUnits=\"userSpaceOnUse\"\r\n            >\r\n                <stop offset=\"0\" stopColor=\"#A6B8E7\"></stop>\r\n                <stop offset=\"1\" stopColor=\"#DCA6E7\"></stop>\r\n            </linearGradient>\r\n            <radialGradient\r\n                id=\"_Radial3\"\r\n                cx=\"0\"\r\n                cy=\"0\"\r\n                r=\"1\"\r\n                gradientTransform=\"matrix(201.57 0 0 -201.57 201.57 203.725)\"\r\n                gradientUnits=\"userSpaceOnUse\"\r\n            >\r\n                <stop offset=\"0\" stopColor=\"#1D1D1B\" stopOpacity=\"0.2\"></stop>\r\n                <stop offset=\"1\" stopColor=\"#C2C2C1\" stopOpacity=\"0.2\"></stop>\r\n            </radialGradient>\r\n        </defs>\r\n    </svg>\r\n)","import { DocumentedComponent } from \"./shared\";\r\n\r\nexport interface ComponentProps {\r\n    comp: DocumentedComponent\r\n}\r\n\r\nexport default function Component({ comp }: ComponentProps) {\r\n    return (\r\n        <article className=\"mb-5\">\r\n            <h2 className=\"mt-2\">{comp.displayName}</h2>\r\n\r\n            <h3>Props</h3>\r\n\r\n            <table className=\"table table-bordered\" style={{ backgroundColor: \"var(--control-bg)\" }}>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Component</th>\r\n                        <th>Description</th>\r\n                        <th>Type</th>\r\n                        <th>Default value</th>\r\n                    </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                    {comp.props && Object.keys(comp.props).map((prop: string) =>\r\n                        <tr key={prop}>\r\n                            <td>\r\n                                <code style={{ fontWeight: comp.props[prop].required ? \"bold\" : undefined }}>{prop}</code>\r\n                                {comp.props[prop].required && \" (required)\"}\r\n                            </td>\r\n                            <td>{comp.props[prop].description}</td>\r\n                            <td>{comp.props[prop].tsType.raw || comp.props[prop].tsType.name}</td>\r\n                            <td><code>{comp.props[prop].defaultValue?.value}</code></td>\r\n                        </tr>\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n        </article>\r\n    )\r\n}","import { container } from \"../../recipes\"\r\nimport Component from \"../Component\"\r\nimport docs from \"../data/docs.json\"\r\nimport { DocumentedComponent } from \"../shared\"\r\n\r\nexport interface ComponentsPageProps {\r\n\r\n}\r\n\r\nexport default function ComponentsPage({ }: ComponentsPageProps) {\r\n    return (\r\n        <div className={container}>\r\n            {docs && Object.values(docs).map((comp: DocumentedComponent, index: number) =>\r\n                <Component key={index} comp={comp} />\r\n            )}\r\n        </div>\r\n    )\r\n}","/** Center the content for bigger screens and set a horizontal margin for smaller screens. */\r\nexport const container = \"container mx-3\"","import \"./docs/docs.scss\"\n\nimport { Github, House, Newspaper, Puzzle } from \"react-bootstrap-icons\"\nimport { getPhrase } from \"./docs/shared\"\nimport { Button } from \"./components/Button\"\nimport { MenuItem } from \"./components/MenuItem\"\nimport { CSSProperties, useState } from \"react\"\nimport { BrowserRouter as Router, Switch, Route, Link, NavLink } from \"react-router-dom\"\nimport DemosPage from \"./docs/pages/DemosPage\"\nimport PostsPage from \"./docs/pages/PostsPage\"\nimport { Logo } from \"./docs/Logo\"\nimport { ThemeSwitch } from \"./docs/ThemeSwitch\"\nimport ComponentsPage from \"./docs/pages/ComponentsPage\"\n\nfunction App() {\n    const [customFont, setCustomFont] = useState<boolean>(false)\n    const toggleCustomFont = () => setCustomFont(!customFont)\n\n    return (\n        <Router basename={process.env.PUBLIC_URL}>\n            <div className=\"App\" style={{\n                \"--font-family-base\": `${customFont ? '\"Inter\", ' : \"\"}-apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif`\n            } as CSSProperties}>\n                <header className=\"container mx-3 d-md-flex align-items-center justify-content-between py-4\">\n                    <Link to=\"/\" className=\"d-inline-flex align-items-center\" style={{ fontSize: \"48px\" }}>\n                        <Logo /> <h6 className=\"ms-2 mb-0\">Blank</h6>\n                    </Link>\n\n                    <nav className=\"d-sm-flex align-items-center\">\n                        <MenuItem tag={NavLink} exact to=\"/\" className=\"align-items-center\"><House className=\"me-1\" /> {getPhrase(\"Home\")}</MenuItem>\n                        <MenuItem tag={NavLink} to=\"/components\" className=\"align-items-center\"><Puzzle className=\"me-1\" /> {getPhrase(\"Components\")}</MenuItem>\n                        <MenuItem tag={NavLink} to=\"/posts\" className=\"align-items-center\"><Newspaper className=\"me-1\" /> {getPhrase(\"Posts\")}</MenuItem>\n                        <MenuItem href=\"https://bruegmann.github.io/blue-react\" target=\"_blank\" rel=\"noopener noreferrer\">Blue React</MenuItem>\n\n                        <MenuItem onClick={() => alert(\"Hi!\")} className=\"me-1\">Click me !</MenuItem>\n                        <ThemeSwitch />\n                    </nav>\n                </header>\n\n                <div className=\"mx-3 mb-3 border-top\" />\n\n                <Switch>\n                    <Route path=\"/posts\">\n                        <PostsPage />\n                    </Route>\n                    <Route path=\"/components\">\n                        <ComponentsPage />\n                    </Route>\n                    <Route exact path=\"/\">\n                        <DemosPage />\n                    </Route>\n                </Switch>\n\n                <footer className=\"text-center py-3\">\n                    <a href=\"https://github.com/bruegmann/blank\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"d-inline-flex align-items-center\">\n                        <Github className=\"me-1\" /> Code on GitHub\n                    </a>\n                </footer>\n            </div>\n        </Router>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won\"t work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let\"s check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n                        \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === \"installed\") {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                \"New content is available and will be used when all \" +\n                                \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It\"s the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log(\"Content is cached for offline use.\")\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error(\"Error during service worker registration:\", error)\n        })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can\"t reload the page.\n    fetch(swUrl, {\n        headers: { \"Service-Worker\": \"script\" }\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get(\"content-type\")\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf(\"javascript\") === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\"\n            )\n        })\n}\n\nexport function unregister() {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}